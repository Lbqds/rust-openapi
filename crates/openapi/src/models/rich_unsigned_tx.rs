/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RichUnsignedTx {
    #[serde(rename = "txId")]
    pub tx_id: String,
    #[serde(rename = "version")]
    pub version: i32,
    #[serde(rename = "networkId")]
    pub network_id: i32,
    #[serde(rename = "scriptOpt", skip_serializing_if = "Option::is_none")]
    pub script_opt: Option<String>,
    #[serde(rename = "gasAmount")]
    pub gas_amount: i32,
    #[serde(rename = "gasPrice")]
    pub gas_price: String,
    #[serde(rename = "inputs")]
    pub inputs: Vec<models::RichAssetInput>,
    #[serde(rename = "fixedOutputs")]
    pub fixed_outputs: Vec<models::FixedAssetOutput>,
}

impl RichUnsignedTx {
    pub fn new(tx_id: String, version: i32, network_id: i32, gas_amount: i32, gas_price: String, inputs: Vec<models::RichAssetInput>, fixed_outputs: Vec<models::FixedAssetOutput>) -> RichUnsignedTx {
        RichUnsignedTx {
            tx_id,
            version,
            network_id,
            script_opt: None,
            gas_amount,
            gas_price,
            inputs,
            fixed_outputs,
        }
    }
}

