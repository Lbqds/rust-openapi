/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CompileScriptResult {
    #[serde(rename = "version")]
    pub version: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "bytecodeTemplate")]
    pub bytecode_template: String,
    #[serde(rename = "bytecodeDebugPatch")]
    pub bytecode_debug_patch: String,
    #[serde(rename = "fields")]
    pub fields: Box<models::FieldsSig>,
    #[serde(rename = "functions")]
    pub functions: Vec<models::FunctionSig>,
    #[serde(rename = "warnings")]
    pub warnings: Vec<String>,
}

impl CompileScriptResult {
    pub fn new(version: String, name: String, bytecode_template: String, bytecode_debug_patch: String, fields: models::FieldsSig, functions: Vec<models::FunctionSig>, warnings: Vec<String>) -> CompileScriptResult {
        CompileScriptResult {
            version,
            name,
            bytecode_template,
            bytecode_debug_patch,
            fields: Box::new(fields),
            functions,
            warnings,
        }
    }
}

