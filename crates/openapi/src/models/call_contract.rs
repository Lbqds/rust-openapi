/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CallContract {
    #[serde(rename = "group")]
    pub group: i32,
    #[serde(rename = "worldStateBlockHash", skip_serializing_if = "Option::is_none")]
    pub world_state_block_hash: Option<String>,
    #[serde(rename = "txId", skip_serializing_if = "Option::is_none")]
    pub tx_id: Option<String>,
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "callerAddress", skip_serializing_if = "Option::is_none")]
    pub caller_address: Option<String>,
    #[serde(rename = "methodIndex")]
    pub method_index: i32,
    #[serde(rename = "args", skip_serializing_if = "Option::is_none")]
    pub args: Option<Vec<models::Val>>,
    #[serde(rename = "interestedContracts", skip_serializing_if = "Option::is_none")]
    pub interested_contracts: Option<Vec<String>>,
    #[serde(rename = "inputAssets", skip_serializing_if = "Option::is_none")]
    pub input_assets: Option<Vec<models::TestInputAsset>>,
}

impl CallContract {
    pub fn new(group: i32, address: String, method_index: i32) -> CallContract {
        CallContract {
            group,
            world_state_block_hash: None,
            tx_id: None,
            address,
            caller_address: None,
            method_index,
            args: None,
            interested_contracts: None,
            input_assets: None,
        }
    }
}

