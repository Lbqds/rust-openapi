/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Destination {
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "attoAlphAmount", skip_serializing_if = "Option::is_none")]
    pub atto_alph_amount: Option<String>,
    #[serde(rename = "tokens", skip_serializing_if = "Option::is_none")]
    pub tokens: Option<Vec<models::Token>>,
    #[serde(rename = "lockTime", skip_serializing_if = "Option::is_none")]
    pub lock_time: Option<i64>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
}

impl Destination {
    pub fn new(address: String) -> Destination {
        Destination {
            address,
            atto_alph_amount: None,
            tokens: None,
            lock_time: None,
            message: None,
        }
    }
}

