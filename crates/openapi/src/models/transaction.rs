/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Transaction {
    #[serde(rename = "unsigned")]
    pub unsigned: Box<models::UnsignedTx>,
    #[serde(rename = "scriptExecutionOk")]
    pub script_execution_ok: bool,
    #[serde(rename = "contractInputs")]
    pub contract_inputs: Vec<models::OutputRef>,
    #[serde(rename = "generatedOutputs")]
    pub generated_outputs: Vec<models::Output>,
    #[serde(rename = "inputSignatures")]
    pub input_signatures: Vec<String>,
    #[serde(rename = "scriptSignatures")]
    pub script_signatures: Vec<String>,
}

impl Transaction {
    pub fn new(unsigned: models::UnsignedTx, script_execution_ok: bool, contract_inputs: Vec<models::OutputRef>, generated_outputs: Vec<models::Output>, input_signatures: Vec<String>, script_signatures: Vec<String>) -> Transaction {
        Transaction {
            unsigned: Box::new(unsigned),
            script_execution_ok,
            contract_inputs,
            generated_outputs,
            input_signatures,
            script_signatures,
        }
    }
}

