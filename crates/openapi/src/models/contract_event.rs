/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContractEvent {
    #[serde(rename = "blockHash")]
    pub block_hash: String,
    #[serde(rename = "txId")]
    pub tx_id: String,
    #[serde(rename = "eventIndex")]
    pub event_index: i32,
    #[serde(rename = "fields")]
    pub fields: Vec<models::Val>,
}

impl ContractEvent {
    pub fn new(block_hash: String, tx_id: String, event_index: i32, fields: Vec<models::Val>) -> ContractEvent {
        ContractEvent {
            block_hash,
            tx_id,
            event_index,
            fields,
        }
    }
}

