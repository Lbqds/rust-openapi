/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Balance {
    #[serde(rename = "balance")]
    pub balance: String,
    #[serde(rename = "balanceHint")]
    pub balance_hint: String,
    #[serde(rename = "lockedBalance")]
    pub locked_balance: String,
    #[serde(rename = "lockedBalanceHint")]
    pub locked_balance_hint: String,
    #[serde(rename = "tokenBalances", skip_serializing_if = "Option::is_none")]
    pub token_balances: Option<Vec<models::Token>>,
    #[serde(rename = "lockedTokenBalances", skip_serializing_if = "Option::is_none")]
    pub locked_token_balances: Option<Vec<models::Token>>,
    #[serde(rename = "utxoNum")]
    pub utxo_num: i32,
}

impl Balance {
    pub fn new(balance: String, balance_hint: String, locked_balance: String, locked_balance_hint: String, utxo_num: i32) -> Balance {
        Balance {
            balance,
            balance_hint,
            locked_balance,
            locked_balance_hint,
            token_balances: None,
            locked_token_balances: None,
            utxo_num,
        }
    }
}

