/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InterCliquePeerInfo {
    #[serde(rename = "cliqueId")]
    pub clique_id: String,
    #[serde(rename = "brokerId")]
    pub broker_id: i32,
    #[serde(rename = "groupNumPerBroker")]
    pub group_num_per_broker: i32,
    #[serde(rename = "address")]
    pub address: Box<models::BrokerInfoAddress>,
    #[serde(rename = "isSynced")]
    pub is_synced: bool,
    #[serde(rename = "clientVersion")]
    pub client_version: String,
}

impl InterCliquePeerInfo {
    pub fn new(clique_id: String, broker_id: i32, group_num_per_broker: i32, address: models::BrokerInfoAddress, is_synced: bool, client_version: String) -> InterCliquePeerInfo {
        InterCliquePeerInfo {
            clique_id,
            broker_id,
            group_num_per_broker,
            address: Box::new(address),
            is_synced,
            client_version,
        }
    }
}

