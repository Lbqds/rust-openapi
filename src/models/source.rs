/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Source {
    #[serde(rename = "fromPublicKey")]
    pub from_public_key: String,
    #[serde(rename = "destinations")]
    pub destinations: Vec<models::Destination>,
    #[serde(rename = "fromPublicKeyType", skip_serializing_if = "Option::is_none")]
    pub from_public_key_type: Option<String>,
    #[serde(rename = "gasAmount", skip_serializing_if = "Option::is_none")]
    pub gas_amount: Option<i32>,
    #[serde(rename = "utxos", skip_serializing_if = "Option::is_none")]
    pub utxos: Option<Vec<models::OutputRef>>,
}

impl Source {
    pub fn new(from_public_key: String, destinations: Vec<models::Destination>) -> Source {
        Source {
            from_public_key,
            destinations,
            from_public_key_type: None,
            gas_amount: None,
            utxos: None,
        }
    }
}

