/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CallContractSucceeded {
    #[serde(rename = "returns")]
    pub returns: Vec<models::Val>,
    #[serde(rename = "gasUsed")]
    pub gas_used: i32,
    #[serde(rename = "contracts")]
    pub contracts: Vec<models::ContractState>,
    #[serde(rename = "txInputs")]
    pub tx_inputs: Vec<String>,
    #[serde(rename = "txOutputs")]
    pub tx_outputs: Vec<models::Output>,
    #[serde(rename = "events")]
    pub events: Vec<models::ContractEventByTxId>,
    #[serde(rename = "debugMessages")]
    pub debug_messages: Vec<models::DebugMessage>,
    #[serde(rename = "type")]
    pub r#type: String,
}

impl CallContractSucceeded {
    pub fn new(returns: Vec<models::Val>, gas_used: i32, contracts: Vec<models::ContractState>, tx_inputs: Vec<String>, tx_outputs: Vec<models::Output>, events: Vec<models::ContractEventByTxId>, debug_messages: Vec<models::DebugMessage>, r#type: String) -> CallContractSucceeded {
        CallContractSucceeded {
            returns,
            gas_used,
            contracts,
            tx_inputs,
            tx_outputs,
            events,
            debug_messages,
            r#type,
        }
    }
}

