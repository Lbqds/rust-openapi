/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Transfer {
    #[serde(rename = "destinations")]
    pub destinations: Vec<models::Destination>,
    #[serde(rename = "gas", skip_serializing_if = "Option::is_none")]
    pub gas: Option<i32>,
    #[serde(rename = "gasPrice", skip_serializing_if = "Option::is_none")]
    pub gas_price: Option<String>,
    #[serde(rename = "utxosLimit", skip_serializing_if = "Option::is_none")]
    pub utxos_limit: Option<i32>,
}

impl Transfer {
    pub fn new(destinations: Vec<models::Destination>) -> Transfer {
        Transfer {
            destinations,
            gas: None,
            gas_price: None,
            utxos_limit: None,
        }
    }
}

