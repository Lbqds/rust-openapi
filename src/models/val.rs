/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "type")]
pub enum Val {
    #[serde(rename="Address")]
    ValAddress(Box<models::ValAddress>),
    #[serde(rename="Array")]
    ValArray(Box<models::ValArray>),
    #[serde(rename="Bool")]
    ValBool(Box<models::ValBool>),
    #[serde(rename="ByteVec")]
    ValByteVec(Box<models::ValByteVec>),
    #[serde(rename="I256")]
    ValI256(Box<models::ValI256>),
    #[serde(rename="U256")]
    ValU256(Box<models::ValU256>),
}

impl Default for Val {
    fn default() -> Self {
        Self::ValAddress(Default::default())
    }
}


