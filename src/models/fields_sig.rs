/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FieldsSig {
    #[serde(rename = "names")]
    pub names: Vec<String>,
    #[serde(rename = "types")]
    pub types: Vec<String>,
    #[serde(rename = "isMutable")]
    pub is_mutable: Vec<bool>,
}

impl FieldsSig {
    pub fn new(names: Vec<String>, types: Vec<String>, is_mutable: Vec<bool>) -> FieldsSig {
        FieldsSig {
            names,
            types,
            is_mutable,
        }
    }
}

