/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Utxo {
    #[serde(rename = "ref")]
    pub r#ref: Box<models::OutputRef>,
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "tokens", skip_serializing_if = "Option::is_none")]
    pub tokens: Option<Vec<models::Token>>,
    #[serde(rename = "lockTime", skip_serializing_if = "Option::is_none")]
    pub lock_time: Option<i64>,
    #[serde(rename = "additionalData", skip_serializing_if = "Option::is_none")]
    pub additional_data: Option<String>,
}

impl Utxo {
    pub fn new(r#ref: models::OutputRef, amount: String) -> Utxo {
        Utxo {
            r#ref: Box::new(r#ref),
            amount,
            tokens: None,
            lock_time: None,
            additional_data: None,
        }
    }
}

