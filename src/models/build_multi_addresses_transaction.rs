/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BuildMultiAddressesTransaction {
    #[serde(rename = "from")]
    pub from: Vec<models::Source>,
    #[serde(rename = "gasPrice", skip_serializing_if = "Option::is_none")]
    pub gas_price: Option<String>,
    #[serde(rename = "targetBlockHash", skip_serializing_if = "Option::is_none")]
    pub target_block_hash: Option<String>,
}

impl BuildMultiAddressesTransaction {
    pub fn new(from: Vec<models::Source>) -> BuildMultiAddressesTransaction {
        BuildMultiAddressesTransaction {
            from,
            gas_price: None,
            target_block_hash: None,
        }
    }
}

