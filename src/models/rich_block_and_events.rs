/*
 * Alephium API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.15.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RichBlockAndEvents {
    #[serde(rename = "block")]
    pub block: Box<models::RichBlockEntry>,
    #[serde(rename = "events")]
    pub events: Vec<models::ContractEventByBlockHash>,
}

impl RichBlockAndEvents {
    pub fn new(block: models::RichBlockEntry, events: Vec<models::ContractEventByBlockHash>) -> RichBlockAndEvents {
        RichBlockAndEvents {
            block: Box::new(block),
            events,
        }
    }
}

